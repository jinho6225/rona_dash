{"version":3,"sources":["components/useResizeObserver.js","components/RacingBarChart.js","components/useInterval.js","routes/RacingChartHome.js","components/BarChart.js","components/PieChart.js","routes/Home.js","components/Navigation.js","components/DetailBarChart.js","routes/Detail.js","Router.js","App.js","index.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","RacingBarChart","data","maxTotal","unit","svgRef","useRef","wrapperRef","svg","select","console","log","sort","a","b","value","yScale","scaleBand","paddingInner","domain","map","index","range","height","xScale","scaleLinear","width","selectAll","name","join","enter","append","attr","color","Math","floor","bandwidth","transition","fontSz","style","text","className","marginBottom","useInterval","callback","delay","savedCallback","id","setInterval","clearInterval","helper","arr","array","i","length","randomColor","random","toString","push","RacingChartHome","iteration","setIteration","start","setStart","confirmedData","setConfirmedData","deathData","setDeathData","isFirstRender","dataArr","setDataArr","deathdataArr","setDeathDataArr","period","setPeriod","setMaxTotal","maxDeathTotal","setMaxDeathTotal","province","setProvince","fetch","then","res","json","list_of_daily_confirmed_record_by_state","list_of_daily_death_record_by_state","date_array","max_total_confirmed_count_list","max_total_death_count_list","province_list","copied","slice","deathCopied","nameA","toUpperCase","nameB","margin","onClick","Barchart","history","useHistory","padding","maxNum","max","colorScale","clamp","xx","xAxis","axisBottom","ticks","tickFormat","d","call","yAxis","axisLeft","on","event","nodes","indexOf","this","toLocaleString","remove","e","handleClick","val","marginLeft","PieChart","colors","totalSum","reduce","acc","cur","radius","arcGenerator","arc","innerRadius","outerRadius","instructions","pie","padAngle","pieGenerator","num","toFixed","centroid","Home","world","setWorld","confirmed","setConfirmed","deaths","setDeaths","setDate","today","Date","month","getMonth","date","getDate","year","getFullYear","Today","world_df","count","confirmed_global_us","deaths_global_us","state_df","Confirmed","Province_State","BarChart","key","htmlFor","Navigation","to","DetailBarChart","opt","tickValues","title","Detail","state","useParams","AppRouter","exact","path","App","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.310ae5d7.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;","import { select, scaleBand, scaleLinear } from \"d3\";\nimport React, { useEffect, useRef } from \"react\";\nimport useResizeObserver from \"./useResizeObserver\";\n\nfunction RacingBarChart({ data, maxTotal, unit }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    console.log(dimensions, 'dime')\n    // sorting the data\n    data.sort((a, b) => b.value - a.value);\n\n    const yScale = scaleBand()\n        .paddingInner(0.1)\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.height]);\n\n    const xScale = scaleLinear()\n        .domain([0, maxTotal+50000])\n        .range([0, dimensions.width]);\n\n    //draw the bars\n    svg.selectAll(\".bar\")\n    .data(data, (entry, index) => entry.name)\n    .join(enter => enter.append('rect').attr('y', (entry, index) => yScale(index)))\n    .attr('fill', entry => entry.color)\n    .attr(\"class\", \"bar\")\n    .attr('x', 0)\n    .attr('height', Math.floor(yScale.bandwidth()) - 1)\n    .transition()\n    .attr('width', entry => xScale(entry.value))\n    .attr(\"y\", (entry, index) => yScale(index));\n\n    //draw the labels\n    let fontSz = '0.9em'\n    if (dimensions.height < 700) fontSz = '0.7em'\n    if (dimensions.height < 550) fontSz = '0.55em'\n    if (dimensions.height < 400) fontSz = '0.4em'\n\n    svg.selectAll('.label')\n    .data(data, (entry, index) => entry.name)\n    .join(enter => enter.append('text').attr('y', (entry, index) => yScale(index) +  yScale.bandwidth() / 2 + 5))\n    .style('font-size', fontSz)\n    .text(entry => `${entry.name} (${entry.value} ${unit})`)\n    .attr('class', 'label')\n    .attr('x', entry => xScale(entry.value) + 10)\n    .transition()\n    .attr(\"y\", (entry, index) => yScale(index) + yScale.bandwidth() / 2 + 5);\n\n  }, [data, dimensions]);\n\n    return (\n    <div className=\"svgContainer\" ref={wrapperRef} style={{ marginBottom: \"0.3rem\" }}>\n        <svg ref={svgRef} className=\"racing_svg\">\n            {/* <g className=\"x-axis\" /> */}\n            {/* <g className=\"y-axis\" /> */}\n\n        </svg>\n    </div>\n    );\n}\n\nexport default RacingBarChart;\n","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;","import React, { useEffect, useState, useRef } from \"react\";\nimport RacingBarChart from \"../components/RacingBarChart\";\nimport useInterval from \"../components/useInterval\";\n\nconst helper = (arr) => {\n  let array = [];\n  for (let i = 0; i < arr.length; i++) {\n    let randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    array.push({\n      name: arr[i],\n      value: 0,\n      color: \"#\" + randomColor,\n    });\n  }\n  return array;\n};\n\nfunction RacingChartHome() {\n  const [iteration, setIteration] = useState(0);\n  const [start, setStart] = useState(false);\n  const [confirmedData, setConfirmedData] = useState([]);\n  const [deathData, setDeathData] = useState([]);\n  const isFirstRender = useRef(true);\n  const [dataArr, setDataArr] = useState([]);\n  const [deathdataArr, setDeathDataArr] = useState([]);\n  const [period, setPeriod] = useState([]);\n  const [maxTotal, setMaxTotal] = useState(0);\n  const [maxDeathTotal, setMaxDeathTotal] = useState(0);\n\n  const [province, setProvince] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/api/dynamic`)\n    // fetch(`https://myungjinho85.pythonanywhere.com/api/dynamic`)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        setDataArr(data.list_of_daily_confirmed_record_by_state);\n        setDeathDataArr(data.list_of_daily_death_record_by_state);\n        setPeriod(data.date_array);\n        setMaxTotal(data.max_total_confirmed_count_list);\n        setMaxDeathTotal(data.max_total_death_count_list);\n        setProvince(data.province_list);\n        isFirstRender.current = false;\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!isFirstRender.current) {\n      setConfirmedData(helper(province));\n      setDeathData(helper(province))\n    }\n  }, [province]);\n\n  useInterval(() => {\n    if (start) {\n      let copied = confirmedData.slice();\n      let deathCopied = deathData.slice();\n      copied.sort(function (a, b) {\n        var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      deathCopied.sort(function (a, b) {\n        var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      if (iteration < dataArr.length) {\n        for (let i = 0; i < dataArr[iteration].length; i++) {\n          copied[i].value = dataArr[iteration][i];\n        }\n        setConfirmedData(copied);\n      }\n      if (iteration < deathdataArr.length) {\n        for (let i = 0; i < deathdataArr[iteration].length; i++) {\n            deathCopied[i].value = deathdataArr[iteration][i];\n        }\n        setDeathData(deathCopied);\n      }\n      setIteration(iteration + 1);\n      if (iteration === dataArr.length) {\n        setStart(!start);\n      }\n    }\n  }, 200);\n  \n  return (\n    <div className=\"container\">\n      <div className=\"racing_chart_container\">\n        <div className=\"racingChart\">\n          <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n            Total Confirmed by U.S. State\n            <span className=\"date\"> (Date: {period[iteration] ? period[iteration] : period[period.length-1]})</span>\n          </h4>\n          <RacingBarChart data={confirmedData} maxTotal={maxTotal} unit={'confiremd'} />\n        </div>\n        <div className=\"racingChart\">\n          <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n            Total Deaths by U.S. State\n            <span className=\"date\"> (Date: {period[iteration] ? period[iteration] : period[period.length-1]})</span>\n          </h4>\n          <RacingBarChart data={deathData} maxTotal={maxDeathTotal} unit={'deaths'} />\n        </div>\n      </div>\n      <div className=\"btn-container\">\n        <button onClick={() => setStart(!start)}>\n            {start ? \"Stop the race\" : \"Start the race!\"}\n        </button>\n        <button onClick={() => {\n            setIteration(0)\n            setStart(!start)\n        }}>\n            Restart\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default RacingChartHome;\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom, scaleLinear, axisLeft, scaleBand, max } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Barchart({ data, province=false }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef)\n  const history = useHistory();\n\n    function handleClick(d, index) {\n        if (province) {\n            history.push(`/detail/${d[index]}`);\n        }\n    }  \n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(dimensions)\n\n    if (!dimensions) return;\n\n    //scale\n    let padding = province && province.length ? 0.4: 0.5\n    const xScale = scaleBand()\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.width]) // change\n        .padding(padding);\n\n    let maxNum = province && province.length ? max(data)+50000 : max(data)+5000000\n    const yScale = scaleLinear()\n        .domain([0, maxNum]) //todo\n        .range([dimensions.height, 0]); // change\n\n    let color = province && province.length ? [\"green\", \"orange\", \"red\"] : [\"red\", \"green\", \"orange\"]\n    const colorScale = scaleLinear()\n        .domain([0, maxNum/2, maxNum])\n        .range(color)\n        .clamp(true);\n\n    //create x-axis\n    let xx = province && province.length ? [\"Alabama\", \"Alaska\", \"American Samoa\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Diamond Princess\", \"District of Columbia\", \"Florida\", \"Georgia\", \"Grand Princess\", \"Guam\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Northern Mariana Islands\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Puerto Rico\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virgin Islands\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"] : ['confirmed', \"Deaths\", \"Recovered\"]\n    const xAxis = axisBottom(xScale)\n        .ticks(data.length)\n        // .attr(\"transform\",  `translate(10px, 10px) rotate(45deg)`)\n        .tickFormat((d, i) => xx[i])\n\n        if (province && province.length) {\n            svg\n            .select(\".x-axis\")\n            .style(\"transform\", `translateY(${dimensions.height}px) `)\n            .call(xAxis)\n            .selectAll(\"text\")\n            .attr(\"y\", 6)\n            .attr(\"x\", -6)\n            .attr(\"dy\", \".5em\")\n            .attr(\"transform\", \"rotate(-40)\")\n            .style(\"text-anchor\", \"end\");\n        } else if (province === false){\n            svg\n            .select(\".x-axis\")\n            .style(\"transform\", `translateY(${dimensions.height}px) `)\n            .call(xAxis)\n        }\n\n\n    //create y-axis\n    const yAxis = axisLeft(yScale);\n    svg\n        .select(\".y-axis\")\n        .style(\"transform\", `0`)\n        .call(yAxis);\n\n    if (province && province.length) {\n        svg\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .on(\"mouseenter\", function(event, value) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            select(this)\n            .attr(\"opacity\", 0.3)\n            .transition()\n\n            svg\n                .selectAll(\".tooltip\")\n                .data([value])\n                .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value) - 4))\n                .attr(\"class\", \"tooltip\")\n                .text(d => d.toLocaleString())\n                .attr(\"x\", xScale(index) + xScale.bandwidth() / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .transition()\n                .attr(\"y\", yScale(value) - 8)\n                .attr(\"opacity\", 1);\n        })\n        .on(\"mouseleave\", function(event, value) {\n            select(this)\n            .attr(\"opacity\", 1)\n            .transition()\n\n            svg.selectAll(\".tooltip\").remove()\n        })\n        .style(\"transform\", 'scale(1, -1)')\n        .attr('x', (value, index) => xScale(index))\n        .attr('y', -dimensions.height)\n        .attr('width', xScale.bandwidth())\n        .on(\"click\", function(e, d) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            handleClick(province, index);\n        })            \n        .transition()\n        .attr('fill', colorScale)\n        .attr('height', val => dimensions.height - yScale(val))\n\n    } else if (province === false){\n        svg\n            .selectAll(\".bar\")\n            .data(data)\n            .join(\"rect\")\n            .attr(\"class\", \"bar\")\n            .style(\"transform\", 'scale(1, -1)')\n            .attr('x', (value, index) => xScale(index))\n            .attr('y', -dimensions.height)\n            .attr('width', xScale.bandwidth())\n            .transition()\n            .attr('fill', colorScale)\n            .attr('height', val => dimensions.height - yScale(val))\n    \n        svg\n            .selectAll(\".content\")\n            .data(data)\n            .join(enter => enter.append('text').attr('y', d => yScale(d) - 4))\n            .attr('class', 'content')\n            .text(d => d.toLocaleString())\n            .attr('x', (d, i) => xScale(i) + xScale.bandwidth() / 2)\n            .attr('text-anchor', 'middle')\n            .transition()\n            .attr('y', d => yScale(d) - 8)\n            .attr(\"opacity\", 1);\n    }\n\n    \n\n\n  }, [data, dimensions, province]);\n\n  return (\n    <div ref={wrapperRef} style={{marginBottom: \"1.5rem\", marginLeft: \"4rem\"}}>\n        <svg ref={svgRef} className=\"main_svg\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n        </svg> \n    </div>\n  );\n}\n\nexport default Barchart","import { arc, pie, select } from \"d3\";\nimport React, { useEffect, useRef } from \"react\";\nimport useResizeObserver from \"./useResizeObserver\";\n\n\nfunction PieChart({ data, colors }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    const reducer = (acc, cur) => acc + cur.value;\n    const totalSum = data.reduce(reducer, 0)\n    // arc takes instructions (objects with special properties, like startAngle, endAngle, etc.)\n    // and transforms them into \"d\" attributes for path elements\n    console.log(dimensions, 'dimen')\n    let radius = 130\n    if (dimensions.height < 250) radius = 100\n    if (dimensions.height < 200) radius = 70\n    if (dimensions.height < 150) radius = 40\n    const arcGenerator = arc()\n    .innerRadius(10)\n    .outerRadius(radius);\n\n    // pie will transform data to instructions for arcGenerator\n    const pieGenerator = pie()\n    .padAngle(0)\n    .value(d => d.value)\n    // .sort(null); // makes sure data doesn't get sorted\n    // now transform data to instructions for arc() \n    const instructions = pieGenerator(data)\n\n\n    svg\n        .selectAll(\".slice\")\n        .data(instructions)\n        .join(\"path\")\n        .attr(\"class\", 'slice')\n        .attr(\"stroke\", 'white')\n        .attr(\"fill\", (d, i) => colors[d.data.name])\n        .style('transform', `translate(${dimensions.width / 2}px, ${dimensions.height / 2}px)`)\n        .attr('d', arcGenerator)\n        .transition()\n\n\n        // .attr(\"stroke\", 'white')\n        // .attr(\"stroke-width\", '2px')\n        // .attr(\"fill\", (d, i) => colors[d.data.name])\n        // .style('transform', `translate(${dimensions.width / 2}px, ${dimensions.height / 2}px)`)\n        // .attr('d', arcGenerator)\n        // .transition()\n\n    svg\n        .selectAll(\".labels\")\n        .data(instructions)\n        .join(\"text\")\n        .attr(\"class\", \"labels\")\n        .text((d, i) => {\n          let num = d.data.value ? d.data.value : 0\n          let percentage = (num * 100) / totalSum\n          return num ? (percentage).toFixed(2) + '%' : null\n        })\n        .attr('fill','white')\n        .attr('x', (d, i) => {\n          return arcGenerator.centroid(d)[0] + (dimensions.width/2)-25\n        })\n        .attr('y', (d, i) => {\n          return arcGenerator.centroid(d)[1] + (dimensions.height/2)\n        })\n        .transition()\n\n\n  }, [data, dimensions]);\n\n  return (\n    <div className=\"svgContainer\" ref={wrapperRef} style={{ padding: '0' }}>\n        <svg ref={svgRef} className=\"main_svg\">\n\n        </svg>\n    </div>\n  );\n}\n\nexport default PieChart;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport BarChart from \"../components/BarChart\";\nimport PieChart from \"../components/PieChart\";\n\nfunction Today() {\n  let today = new Date();\n  let month = today.getMonth() + 1;\n  let date = today.getDate();\n  let year = today.getFullYear();\n  return `${month}/${date}/${year}`;\n}\n\nconst colors = {\n  \"Global\": '#ffddc1',\n  \"US\": '#ffab91',\n};\n\nfunction Home() {\n  const [world, setWorld] = useState([]);\n  const [confirmed, setConfirmed] = useState([]);\n  const [deaths, setDeaths] = useState([]);\n  const [data, setDate] = useState([]);\n  const [province, setProvince] = useState([]);\n\n\n  const today = useRef(Today());\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/api/overview`)\n    // fetch(`https://myungjinho85.pythonanywhere.com/api/overview`)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        setWorld(data.world_df.count);\n        setConfirmed(data.confirmed_global_us)\n        setDeaths(data.deaths_global_us)\n        setDate(data.state_df.Confirmed)\n        setProvince(data.state_df.Province_State)\n      });\n  }, []);\n\n  return (\n    <div className=\"main_chart_container\">\n      <div className=\"barChart1\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Global Total Case\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <BarChart data={world} />\n      </div>\n      <div className=\"pieChart1\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Confirmed (Global / US)\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <PieChart\n          data={confirmed}\n          colors={colors}\n        />\n        <div className=\"fields\" >\n            {confirmed.map(key => (\n              <div key={key.name}>\n                <div key={key.name} className=\"field\">\n                  <label htmlFor={key.name} style={{ color: colors[key.name] }}>\n                      {key.name}\n                  </label>\n                </div>\n                <div key={key.value} className=\"field\">\n                  <label htmlFor={key.value} style={{ color: colors[key.name] }}>\n                      {key.value.toLocaleString()}\n                  </label>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n      <div className=\"pieChart2\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Deaths (Global / US)\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <PieChart\n          data={deaths}\n          colors={colors}\n        />\n        <div className=\"fields\" >\n            {deaths.map(key => (\n              <div key={key.name}>\n                <div key={key.name} className=\"field\">\n                  <label htmlFor={key.name} style={{ color: colors[key.name] }}>\n                      {key.name}\n                  </label>\n                </div>\n                <div key={key.value} className=\"field\">\n                  <label htmlFor={key.value} style={{ color: colors[key.name] }}>\n                      {key.value.toLocaleString()}\n                  </label>\n                </div>\n              </div>                 \n            ))}\n        </div>        \n      </div>\n      <div className=\"barChart2\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Total of Confirmed Case By US State\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <BarChart data={data} province={province}  />\n      </div>\n    </div>\n  );\n}\nexport default Home;\n","import React from 'react';\nimport { Link } from \"react-router-dom\"\n\n\nfunction Navigation() {\n    return (\n            <div className=\"nav\" id=\"navbarNav\">\n                <h3 className=\"title\" style={{ margin: \"0.2rem\" }}>\n                <Link to='/'>COVID Tracker</Link></h3>\n                <ul className=\"navbar-nav\">\n                    <li className=\"navbar-nav-li\">\n                        <Link to='/'>Home</Link>\n                    </li>\n                    <li className=\"navbar-nav-li\">\n                        <Link to='/racing'>Racing Bar Chart</Link>\n                    </li>\n                </ul>\n            </div>\n    )\n}\n\nexport default Navigation;","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom, scaleLinear, axisLeft, scaleBand, max } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction DetailBarChart({ data, period, opt=false }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef)\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(dimensions)\n\n    if (!dimensions) return;\n\n    //scale\n    const xScale = scaleBand()\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.width]) // change\n        .padding(0.1);\n\n    let maxNum = opt ? max(data)+2000 : max(data)+50000\n    const yScale = scaleLinear()\n        .domain([0, maxNum]) //todo\n        .range([dimensions.height, 0]); // change\n\n    const colorScale = scaleLinear()\n        .domain([0, (maxNum)/2, maxNum])\n        .range([\"green\", \"orange\", \"red\"])\n        .clamp(true);\n\n    //create x-axis\n    \n    const xAxis = axisBottom(xScale)\n    .tickValues([]);\n\n    svg\n    .select(\".x-axis\")\n    .style(\"transform\", `translateY(${dimensions.height}px) `)\n    .call(xAxis)\n        \n\n    let title = opt ? 'Deaths' : 'Confirmed'\n    //create y-axis\n    const yAxis = axisLeft(yScale);\n    svg\n        .select(\".y-axis\")\n        .style(\"transform\", `0`)\n        .call(yAxis);\n\n        svg\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .on(\"mouseenter\", function(event, value) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            select(this)\n            .attr(\"opacity\", 0.2)\n            .transition()\n\n            svg\n                .selectAll(\".tooltip\")\n                .data([value])\n                .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value) - 4))\n                .attr(\"class\", \"tooltip\")\n                .text(d => `${period[index]}: ${d.toLocaleString()} ${title}`)\n                // .text(d => `${d.toLocaleString()} ${title}`)\n                .attr(\"x\", xScale(index) + xScale.bandwidth() / 2 - 80)\n                .attr(\"text-anchor\", \"middle\")\n                .transition()\n                .attr(\"y\", yScale(value) - 8)\n                .attr(\"opacity\", 1);\n        })\n        .on(\"mouseleave\", function(event, value) {\n            select(this)\n            .attr(\"opacity\", 1)\n            .transition()\n            svg.selectAll(\".tooltip\").remove()\n        })\n        .style(\"transform\", 'scale(1, -1)')\n        .attr('x', (value, index) => xScale(index))\n        .attr('y', -dimensions.height)\n        .attr('width', xScale.bandwidth())          \n        .transition()\n        .attr('fill', colorScale)\n        .attr('height', val => dimensions.height - yScale(val))\n\n    svg\n        .selectAll('.y-axis-label')\n        .data([title])\n        .join(\n            enter => enter.append(\"text\").attr('class', 'y-axis-label')\n        )\n        .attr(\"fill\", \"Navy\")//set the fill here\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -55)\n        .attr(\"x\", 0 - (dimensions.height / 2) - 48)\n        .text(d => d)\n\n\n  }, [data, dimensions]);\n\n  return (\n    <div ref={wrapperRef} style={{marginBottom: \"1.5rem\", marginLeft: \"4rem\"}}>\n        <svg ref={svgRef} className=\"detail_svg\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n        </svg> \n    </div>\n  );\n}\n\nexport default DetailBarChart","import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DetailBarChart from \"../components/DetailBarChart\";\n\nfunction Today() {\n    let today = new Date();\n    let month = today.getMonth() + 1;\n    let date = today.getDate();\n    let year = today.getFullYear();\n    return `${month}/${date}/${year}`;\n  }\n\nfunction Detail() {\n    const [period, setPeriod] = useState([]);\n    const [confirmed, setConfirmed] = useState([]);\n    const [deaths, setDeaths] = useState([]);\n    const today = useRef(Today());\n\n\n    let { state } = useParams();\n    useEffect(() => {\n        fetch(`http://127.0.0.1:8000/api/detail/${state}`)\n        // fetch(`https://myungjinho85.pythonanywhere.com/api/detail/${state}`)\n        .then((res) => res.json())\n        .then((data) => {\n            // console.log(data, 'data')\n            setPeriod(data.period)\n            setConfirmed(data.confirmed)\n            setDeaths(data.deaths)\n        })\n    }, [])\n\n    return (\n        <div className=\"detail_chart_container\">\n            <div className=\"detailBarChart\">\n                <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n                {state} Confirmed Total\n                <span className=\"date\"> (as of {today.current})</span>\n                </h4>\n                {confirmed.length ? <DetailBarChart data={confirmed} period={period}/> : null}\n            </div>\n            <div className=\"detailBarChart\">\n                <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n                {state} Deaths Total\n                <span className=\"date\"> (as of {today.current})</span>\n                </h4>\n                {deaths.length ? <DetailBarChart data={deaths} opt={true} period={period}/> : null}\n            </div>\n        </div>\n    );\n}\nexport default Detail;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport RacingChartHome from './routes/RacingChartHome';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\n\nconst AppRouter = () => {\n    \n    return (\n        <Router>\n            <Navigation />\n            <Switch>\n                <>\n                    <Route exact path='/'>\n                        <Home />\n                    </Route>\n                    <Route path='/racing'>\n                        <RacingChartHome />\n                    </Route>                     \n                    <Route path='/detail/:state'>\n                        <Detail />\n                    </Route>\n                </>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter","  import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport AppRouter from './Router';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );    \n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history} >\n      <App />\n    </Router>,\n    document.getElementById('root')\n);"],"sourceRoot":""}
{"version":3,"sources":["components/useResizeObserver.js","components/RacingBarChart.js","components/useInterval.js","routes/RacingChartHome.js","components/BarChart.js","components/PieChart.js","routes/Home.js","components/Navigation.js","components/DetailBarChart.js","routes/Detail.js","Router.js","App.js","index.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","RacingBarChart","data","maxTotal","unit","svgRef","useRef","wrapperRef","svg","select","console","log","sort","a","b","value","yScale","scaleBand","paddingInner","domain","map","index","range","height","maxNum","xScale","scaleLinear","width","selectAll","name","join","enter","append","attr","color","Math","floor","bandwidth","transition","fontSz","style","text","className","marginBottom","useInterval","callback","delay","savedCallback","id","setInterval","clearInterval","helper","arr","array","i","length","randomColor","random","toString","push","RacingChartHome","iteration","setIteration","start","setStart","confirmedData","setConfirmedData","deathData","setDeathData","isFirstRender","dataArr","setDataArr","deathdataArr","setDeathDataArr","period","setPeriod","maxTotalList","setMaxTotalList","setMaxTotal","maxDeathTotalList","setMaxDeathTotalList","maxDeathTotal","setMaxDeathTotal","province","setProvince","fetch","then","res","json","list_of_daily_confirmed_record_by_state","list_of_daily_death_record_by_state","date_array","max_total_confirmed_count_list","max_total_death_count_list","province_list","copied","slice","deathCopied","nameA","toUpperCase","nameB","margin","onClick","Barchart","history","useHistory","padding","max","colorScale","clamp","xx","xAxis","axisBottom","ticks","tickFormat","d","call","yAxis","axisLeft","on","event","nodes","indexOf","this","toLocaleString","remove","e","handleClick","val","marginLeft","PieChart","colors","totalSum","reduce","acc","cur","radius","arcGenerator","arc","innerRadius","outerRadius","instructions","pie","padAngle","pieGenerator","num","toFixed","centroid","Home","world","setWorld","confirmed","setConfirmed","deaths","setDeaths","setDate","today","Date","month","getMonth","date","getDate","year","getFullYear","Today","world_df","count","confirmed_global_us","deaths_global_us","state_df","Confirmed","Province_State","BarChart","key","htmlFor","Navigation","to","DetailBarChart","opt","tickValues","title","Detail","state","useParams","AppRouter","exact","path","App","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.035e94ae.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;","import { select, scaleBand, scaleLinear } from \"d3\";\nimport React, { useEffect, useRef } from \"react\";\nimport useResizeObserver from \"./useResizeObserver\";\n\nfunction RacingBarChart({ data, maxTotal, unit }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    console.log(dimensions, 'dime')\n    \n    // sorting the data\n    data.sort((a, b) => b.value - a.value);\n\n    const yScale = scaleBand()\n        .paddingInner(0.1)\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.height]);\n\n    let maxNum = 5\n    if (maxTotal < 100000) {\n        maxNum = maxTotal + 30000\n    } else if (maxTotal < 200000) {\n        maxNum = maxTotal + 30000\n    } else if (maxTotal < 400000) {\n        maxNum = maxTotal + 30000\n    } else if (maxTotal < 600000) {\n        maxNum = maxTotal + 30000\n    } else if (maxTotal < 800000) {\n        maxNum = maxTotal + 30000\n    } else if (maxTotal < 1000000) {\n        maxNum = maxTotal + 200000\n    } else if (maxTotal < 1200000) {\n        maxNum = maxTotal + 200000\n    } else if (maxTotal < 1400000) {\n        maxNum = maxTotal + 200000\n    } else if (maxTotal < 1600000) {\n        maxNum = maxTotal + 200000\n    } else if (maxTotal < 1800000) {\n        maxNum = maxTotal + 200000\n    }\n\n    const xScale = scaleLinear()\n        .domain([0, maxNum])\n        .range([0, dimensions.width]);\n\n    //draw the bars\n    svg.selectAll(\".bar\")\n    .data(data, (entry, index) => entry.name)\n    .join(enter => enter.append('rect').attr('y', (entry, index) => yScale(index)))\n    .attr('fill', entry => entry.color)\n    .attr(\"class\", \"bar\")\n    .attr('x', 0)\n    .attr('height', Math.floor(yScale.bandwidth()) - 1)\n    .transition()\n    .attr('width', entry => xScale(entry.value))\n    .attr(\"y\", (entry, index) => yScale(index));\n\n    //draw the labels\n    let fontSz = '0.9em'\n    if (dimensions.height < 700) fontSz = '0.7em'\n    if (dimensions.height < 550) fontSz = '0.55em'\n    if (dimensions.height < 400) fontSz = '0.4em'\n\n    svg.selectAll('.label')\n    .data(data, (entry, index) => entry.name)\n    .join(enter => enter.append('text').attr('y', (entry, index) => yScale(index) +  yScale.bandwidth() / 2 + 5))\n    .style('font-size', fontSz)\n    .text(entry => `${entry.name} (${entry.value} ${unit})`)\n    .attr('class', 'label')\n    .attr('x', entry => xScale(entry.value) + 10)\n    .transition()\n    .attr(\"y\", (entry, index) => yScale(index) + yScale.bandwidth() / 2 + 5);\n\n  }, [data, dimensions]);\n\n    return (\n    <div className=\"svgContainer\" ref={wrapperRef} style={{ marginBottom: \"0.3rem\" }}>\n        <svg ref={svgRef} className=\"racing_svg\">\n            {/* <g className=\"x-axis\" /> */}\n            {/* <g className=\"y-axis\" /> */}\n\n        </svg>\n    </div>\n    );\n}\n\nexport default RacingBarChart;\n","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;","import React, { useEffect, useState, useRef } from \"react\";\nimport RacingBarChart from \"../components/RacingBarChart\";\nimport useInterval from \"../components/useInterval\";\n\nconst helper = (arr) => {\n  let array = [];\n  for (let i = 0; i < arr.length; i++) {\n    let randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    array.push({\n      name: arr[i],\n      value: 0,\n      color: \"#\" + randomColor,\n    });\n  }\n  return array;\n};\n\nfunction RacingChartHome() {\n  const [iteration, setIteration] = useState(0);\n  const [start, setStart] = useState(false);\n  const [confirmedData, setConfirmedData] = useState([]);\n  const [deathData, setDeathData] = useState([]);\n  const isFirstRender = useRef(true);\n  const [dataArr, setDataArr] = useState([]);\n  const [deathdataArr, setDeathDataArr] = useState([]);\n  const [period, setPeriod] = useState([]);\n  const [maxTotalList, setMaxTotalList] = useState([]);\n  const [maxTotal, setMaxTotal] = useState(0);\n  const [maxDeathTotalList, setMaxDeathTotalList] = useState([]);\n  const [maxDeathTotal, setMaxDeathTotal] = useState(0);\n\n  const [province, setProvince] = useState([]);\n\n  useEffect(() => {\n    // fetch(`http://127.0.0.1:8000/api/dynamic`)\n    fetch(`https://myungjinho85.pythonanywhere.com/api/dynamic`)\n      .then((res) => res.json())\n      .then((data) => {\n        setDataArr(data.list_of_daily_confirmed_record_by_state);\n        setDeathDataArr(data.list_of_daily_death_record_by_state);\n        setPeriod(data.date_array);\n        setMaxTotalList(data.max_total_confirmed_count_list);\n        setMaxDeathTotalList(data.max_total_death_count_list);\n        setProvince(data.province_list);\n        isFirstRender.current = false;\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!isFirstRender.current) {\n      setConfirmedData(helper(province));\n      setDeathData(helper(province))\n    }\n  }, [province]);\n\n  useInterval(() => {\n    if (start) {\n      let copied = confirmedData.slice();\n      let deathCopied = deathData.slice();\n      copied.sort(function (a, b) {\n        var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      deathCopied.sort(function (a, b) {\n        var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      if (iteration < dataArr.length) {\n        for (let i = 0; i < dataArr[iteration].length; i++) {\n          copied[i].value = dataArr[iteration][i];\n        }\n        setConfirmedData(copied);\n      }\n      if (iteration < deathdataArr.length) {\n        for (let i = 0; i < deathdataArr[iteration].length; i++) {\n            deathCopied[i].value = deathdataArr[iteration][i];\n        }\n        setDeathData(deathCopied);\n      }\n      setMaxTotal(maxTotalList[iteration]);\n      setMaxDeathTotal(maxDeathTotalList[iteration]);\n      setIteration(iteration + 1);\n      if (iteration === dataArr.length) {\n        setStart(!start);\n      }\n    }\n  }, 200);\n  \n  return (\n    <div className=\"container\">\n      <div className=\"racing_chart_container\">\n        <div className=\"racingChart\">\n          <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n            Total Confirmed by U.S. State\n            <span className=\"date\"> (Date: {period[iteration] ? period[iteration] : period[period.length-1]})</span>\n          </h4>\n          <RacingBarChart data={confirmedData} maxTotal={maxTotal} unit={'confiremd'} />\n        </div>\n        <div className=\"racingChart\">\n          <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n            Total Deaths by U.S. State\n            <span className=\"date\"> (Date: {period[iteration] ? period[iteration] : period[period.length-1]})</span>\n          </h4>\n          <RacingBarChart data={deathData} maxTotal={maxDeathTotal} unit={'deaths'} />\n        </div>\n      </div>\n      <div className=\"btn-container\">\n        <button className=\"btn-two green rounded\" onClick={() => setStart(!start)}>\n            {start ? \"Stop the race\" : \"Start the race!\"}\n        </button>\n        <button className=\"btn-two green rounded\" onClick={() => {\n            setIteration(0)\n            setStart(!start)\n        }}>\n            Restart\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default RacingChartHome;\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom, scaleLinear, axisLeft, scaleBand, max } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Barchart({ data, province=false }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef)\n  const history = useHistory();\n\n    function handleClick(d, index) {\n        if (province) {\n            history.push(`/detail/${d[index]}`);\n        }\n    }  \n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    if (!dimensions) return;\n\n    //scale\n    let padding = province && province.length ? 0.4: 0.5\n    const xScale = scaleBand()\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.width]) // change\n        .padding(padding);\n\n    let maxNum = province && province.length ? max(data)+50000 : max(data)+5000000\n    const yScale = scaleLinear()\n        .domain([0, maxNum]) //todo\n        .range([dimensions.height, 0]); // change\n\n    let color = province && province.length ? [\"green\", \"orange\", \"red\"] : [\"red\", \"green\", \"orange\"]\n    const colorScale = scaleLinear()\n        .domain([0, maxNum/2, maxNum])\n        .range(color)\n        .clamp(true);\n\n    //create x-axis\n    let xx = province && province.length ? [\"Alabama\", \"Alaska\", \"American Samoa\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Diamond Princess\", \"District of Columbia\", \"Florida\", \"Georgia\", \"Grand Princess\", \"Guam\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Northern Mariana Islands\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Puerto Rico\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virgin Islands\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"] : ['confirmed', \"Deaths\", \"Recovered\"]\n    const xAxis = axisBottom(xScale)\n        .ticks(data.length)\n        // .attr(\"transform\",  `translate(10px, 10px) rotate(45deg)`)\n        .tickFormat((d, i) => xx[i])\n\n        if (province && province.length) {\n            svg\n            .select(\".x-axis\")\n            .style(\"transform\", `translateY(${dimensions.height}px) `)\n            .call(xAxis)\n            .selectAll(\"text\")\n            .attr(\"y\", 6)\n            .attr(\"x\", -6)\n            .attr(\"dy\", \".5em\")\n            .attr(\"transform\", \"rotate(-40)\")\n            .style(\"text-anchor\", \"end\");\n        } else if (province === false){\n            svg\n            .select(\".x-axis\")\n            .style(\"transform\", `translateY(${dimensions.height}px) `)\n            .call(xAxis)\n        }\n\n\n    //create y-axis\n    const yAxis = axisLeft(yScale);\n    svg\n        .select(\".y-axis\")\n        .style(\"transform\", `0`)\n        .call(yAxis);\n\n    if (province && province.length) {\n        svg\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .on(\"mouseenter\", function(event, value) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            select(this)\n            .attr(\"opacity\", 0.3)\n            .transition()\n\n            svg\n                .selectAll(\".tooltip\")\n                .data([value])\n                .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value) - 4))\n                .attr(\"class\", \"tooltip\")\n                .text(d => d.toLocaleString())\n                .attr(\"x\", xScale(index) + xScale.bandwidth() / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .transition()\n                .attr(\"y\", yScale(value) - 8)\n                .attr(\"opacity\", 1);\n        })\n        .on(\"mouseleave\", function(event, value) {\n            select(this)\n            .attr(\"opacity\", 1)\n            .transition()\n\n            svg.selectAll(\".tooltip\").remove()\n        })\n        .style(\"transform\", 'scale(1, -1)')\n        .attr('x', (value, index) => xScale(index))\n        .attr('y', -dimensions.height)\n        .attr('width', xScale.bandwidth())\n        .on(\"click\", function(e, d) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            handleClick(province, index);\n        })            \n        .transition()\n        .attr('fill', colorScale)\n        .attr('height', val => dimensions.height - yScale(val))\n\n    } else if (province === false){\n        svg\n            .selectAll(\".bar\")\n            .data(data)\n            .join(\"rect\")\n            .attr(\"class\", \"bar\")\n            .style(\"transform\", 'scale(1, -1)')\n            .attr('x', (value, index) => xScale(index))\n            .attr('y', -dimensions.height)\n            .attr('width', xScale.bandwidth())\n            .transition()\n            .attr('fill', colorScale)\n            .attr('height', val => dimensions.height - yScale(val))\n    \n        svg\n            .selectAll(\".content\")\n            .data(data)\n            .join(enter => enter.append('text').attr('y', d => yScale(d) - 4))\n            .attr('class', 'content')\n            .text(d => d.toLocaleString())\n            .attr('x', (d, i) => xScale(i) + xScale.bandwidth() / 2)\n            .attr('text-anchor', 'middle')\n            .transition()\n            .attr('y', d => yScale(d) - 8)\n            .attr(\"opacity\", 1);\n    }\n\n    \n\n\n  }, [data, dimensions, province]);\n\n  return (\n    <div ref={wrapperRef} style={{marginBottom: \"1.5rem\", marginLeft: \"4rem\"}}>\n        <svg ref={svgRef} className=\"main_svg\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n        </svg> \n    </div>\n  );\n}\n\nexport default Barchart","import { arc, pie, select } from \"d3\";\nimport React, { useEffect, useRef } from \"react\";\nimport useResizeObserver from \"./useResizeObserver\";\n\n\nfunction PieChart({ data, colors }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    const reducer = (acc, cur) => acc + cur.value;\n    const totalSum = data.reduce(reducer, 0)\n    // arc takes instructions (objects with special properties, like startAngle, endAngle, etc.)\n    // and transforms them into \"d\" attributes for path elements\n    let radius = 130\n    if (dimensions.height < 250) {\n\tradius = 100\n    } else if (dimensions.height < 200) {\n\tradius = 70\n    } else if (dimensions.height < 150) {\n\tradius = 40\n    }\n    const arcGenerator = arc()\n    .innerRadius(10)\n    .outerRadius(radius);\n\n    // pie will transform data to instructions for arcGenerator\n    const pieGenerator = pie()\n    .padAngle(0)\n    .value(d => d.value)\n    // .sort(null); // makes sure data doesn't get sorted\n    // now transform data to instructions for arc() \n    const instructions = pieGenerator(data)\n\n\n    svg\n        .selectAll(\".slice\")\n        .data(instructions)\n        .join(\"path\")\n        .attr(\"class\", 'slice')\n        .attr(\"stroke\", 'white')\n        .attr(\"fill\", (d, i) => colors[d.data.name])\n        .style('transform', `translate(${dimensions.width / 2}px, ${dimensions.height / 2}px)`)\n        .attr('d', arcGenerator)\n        .transition()\n\n\n        // .attr(\"stroke\", 'white')\n        // .attr(\"stroke-width\", '2px')\n        // .attr(\"fill\", (d, i) => colors[d.data.name])\n        // .style('transform', `translate(${dimensions.width / 2}px, ${dimensions.height / 2}px)`)\n        // .attr('d', arcGenerator)\n        // .transition()\n\n    svg\n        .selectAll(\".labels\")\n        .data(instructions)\n        .join(\"text\")\n        .attr(\"class\", \"labels\")\n        .text((d, i) => {\n          let num = d.data.value ? d.data.value : 0\n          let percentage = (num * 100) / totalSum\n          return num ? (percentage).toFixed(2) + '%' : null\n        })\n        .attr('fill','white')\n        .attr('x', (d, i) => {\n          return arcGenerator.centroid(d)[0] + (dimensions.width/2)-25\n        })\n        .attr('y', (d, i) => {\n          return arcGenerator.centroid(d)[1] + (dimensions.height/2)\n        })\n        .transition()\n\n\n  }, [data, dimensions]);\n\n  return (\n    <div className=\"svgContainer\" ref={wrapperRef} style={{ padding: '0' }}>\n        <svg ref={svgRef} className=\"main_svg\">\n\n        </svg>\n    </div>\n  );\n}\n\nexport default PieChart;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport BarChart from \"../components/BarChart\";\nimport PieChart from \"../components/PieChart\";\n\nfunction Today() {\n  let today = new Date();\n  let month = today.getMonth() + 1;\n  let date = today.getDate();\n  let year = today.getFullYear();\n  return `${month}/${date}/${year}`;\n}\n\nconst colors = {\n  \"Global\": '#ffddc1',\n  \"US\": '#ffab91',\n};\n\nfunction Home() {\n  const [world, setWorld] = useState([]);\n  const [confirmed, setConfirmed] = useState([]);\n  const [deaths, setDeaths] = useState([]);\n  const [data, setDate] = useState([]);\n  const [province, setProvince] = useState([]);\n\n\n  const today = useRef(Today());\n  useEffect(() => {\n    // fetch(`http://127.0.0.1:8000/api/overview`)\n    fetch(`https://myungjinho85.pythonanywhere.com/api/overview`)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        setWorld(data.world_df.count);\n        setConfirmed(data.confirmed_global_us)\n        setDeaths(data.deaths_global_us)\n        setDate(data.state_df.Confirmed)\n        setProvince(data.state_df.Province_State)\n      });\n  }, []);\n\n  return (\n    <div className=\"main_chart_container\">\n      <div className=\"barChart1\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Global Total Case\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <BarChart data={world} />\n      </div>\n      <div className=\"pieChart1\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Confirmed (Global / US)\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <PieChart\n          data={confirmed}\n          colors={colors}\n        />\n        <div className=\"fields\" >\n            {confirmed.map(key => (\n              <div key={key.name}>\n                <div key={key.name} className=\"field\">\n                  <label htmlFor={key.name} style={{ color: colors[key.name] }}>\n                      {key.name}\n                  </label>\n                </div>\n                <div key={key.value} className=\"field\">\n                  <label htmlFor={key.value} style={{ color: colors[key.name] }}>\n                      {key.value.toLocaleString()}\n                  </label>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n      <div className=\"pieChart2\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Deaths (Global / US)\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <PieChart\n          data={deaths}\n          colors={colors}\n        />\n        <div className=\"fields\" >\n            {deaths.map(key => (\n              <div key={key.name}>\n                <div key={key.name} className=\"field\">\n                  <label htmlFor={key.name} style={{ color: colors[key.name] }}>\n                      {key.name}\n                  </label>\n                </div>\n                <div key={key.value} className=\"field\">\n                  <label htmlFor={key.value} style={{ color: colors[key.name] }}>\n                      {key.value.toLocaleString()}\n                  </label>\n                </div>\n              </div>                 \n            ))}\n        </div>        \n      </div>\n      <div className=\"barChart2\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Total of Confirmed Case By US State\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <BarChart data={data} province={province}  />\n      </div>\n    </div>\n  );\n}\nexport default Home;\n","import React from 'react';\nimport { Link } from \"react-router-dom\"\n\n\nfunction Navigation() {\n    return (\n            <div className=\"nav\" id=\"navbarNav\">\n                <h3 className=\"title\" style={{ margin: \"0.2rem\" }} id=\"navbarTitle\">\n                <Link to='/'>COVID Tracker</Link></h3>\n                <ul className=\"navbar-nav\">\n                    <li className=\"navbar-nav-li\">\n                        <Link to='/'>Home</Link>\n                    </li>\n                    <li className=\"navbar-nav-li\">\n                        <Link to='/racing'>Racing Bar Chart</Link>\n                    </li>\n                </ul>\n            </div>\n    )\n}\n\nexport default Navigation;","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom, scaleLinear, axisLeft, scaleBand, max } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction DetailBarChart({ data, period, opt=false }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef)\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    if (!dimensions) return;\n\n    //scale\n    const xScale = scaleBand()\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.width]) // change\n        .padding(0.1);\n\n    let maxNum = opt ? max(data)+2000 : max(data)+50000\n    const yScale = scaleLinear()\n        .domain([0, maxNum]) //todo\n        .range([dimensions.height, 0]); // change\n\n    const colorScale = scaleLinear()\n        .domain([0, (maxNum)/2, maxNum])\n        .range([\"green\", \"orange\", \"red\"])\n        .clamp(true);\n\n    //create x-axis\n    \n    const xAxis = axisBottom(xScale)\n    .tickValues([]);\n\n    svg\n    .select(\".x-axis\")\n    .style(\"transform\", `translateY(${dimensions.height}px) `)\n    .call(xAxis)\n        \n\n    let title = opt ? 'Deaths' : 'Confirmed'\n    //create y-axis\n    const yAxis = axisLeft(yScale);\n    svg\n        .select(\".y-axis\")\n        .style(\"transform\", `0`)\n        .call(yAxis);\n\n        svg\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .on(\"mouseenter\", function(event, value) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            select(this)\n            .attr(\"opacity\", 0.2)\n            .transition()\n\n            svg\n                .selectAll(\".tooltip\")\n                .data([value])\n                .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value) - 4))\n                .attr(\"class\", \"tooltip\")\n                .text(d => `${period[index]}: ${d.toLocaleString()} ${title}`)\n                // .text(d => `${d.toLocaleString()} ${title}`)\n                .attr(\"x\", xScale(index) + xScale.bandwidth() / 2 - 80)\n                .attr(\"text-anchor\", \"middle\")\n                .transition()\n                .attr(\"y\", yScale(value) - 8)\n                .attr(\"opacity\", 1);\n        })\n        .on(\"mouseleave\", function(event, value) {\n            select(this)\n            .attr(\"opacity\", 1)\n            .transition()\n            svg.selectAll(\".tooltip\").remove()\n        })\n        .style(\"transform\", 'scale(1, -1)')\n        .attr('x', (value, index) => xScale(index))\n        .attr('y', -dimensions.height)\n        .attr('width', xScale.bandwidth())          \n        .transition()\n        .attr('fill', colorScale)\n        .attr('height', val => dimensions.height - yScale(val))\n\n    svg\n        .selectAll('.y-axis-label')\n        .data([title])\n        .join(\n            enter => enter.append(\"text\").attr('class', 'y-axis-label')\n        )\n        .attr(\"fill\", \"Navy\")//set the fill here\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -55)\n        .attr(\"x\", 0 - (dimensions.height / 2) - 48)\n        .text(d => d)\n\n\n  }, [data, dimensions]);\n\n  return (\n    <div ref={wrapperRef} style={{marginBottom: \"1.5rem\", marginLeft: \"4rem\"}}>\n        <svg ref={svgRef} className=\"detail_svg\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n        </svg> \n    </div>\n  );\n}\n\nexport default DetailBarChart","import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DetailBarChart from \"../components/DetailBarChart\";\n\nfunction Today() {\n    let today = new Date();\n    let month = today.getMonth() + 1;\n    let date = today.getDate();\n    let year = today.getFullYear();\n    return `${month}/${date}/${year}`;\n  }\n\nfunction Detail() {\n    const [period, setPeriod] = useState([]);\n    const [confirmed, setConfirmed] = useState([]);\n    const [deaths, setDeaths] = useState([]);\n    const today = useRef(Today());\n\n\n    let { state } = useParams();\n    useEffect(() => {\n        // fetch(`http://127.0.0.1:8000/api/detail/${state}`)\n        fetch(`https://myungjinho85.pythonanywhere.com/api/detail/${state}`)\n        .then((res) => res.json())\n        .then((data) => {\n            // console.log(data, 'data')\n            setPeriod(data.period)\n            setConfirmed(data.confirmed)\n            setDeaths(data.deaths)\n        })\n    }, [])\n\n    return (\n        <div className=\"detail_chart_container\">\n            <div className=\"detailBarChart\">\n                <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n                {state} Confirmed Total\n                <span className=\"date\"> (as of {today.current})</span>\n                </h4>\n                {confirmed.length ? <DetailBarChart data={confirmed} period={period}/> : null}\n            </div>\n            <div className=\"detailBarChart\">\n                <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n                {state} Deaths Total\n                <span className=\"date\"> (as of {today.current})</span>\n                </h4>\n                {deaths.length ? <DetailBarChart data={deaths} opt={true} period={period}/> : null}\n            </div>\n        </div>\n    );\n}\nexport default Detail;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport RacingChartHome from './routes/RacingChartHome';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\n\nconst AppRouter = () => {\n    \n    return (\n        <Router>\n            <Navigation />\n            <Switch>\n                <>\n                    <Route exact path='/'>\n                        <Home />\n                    </Route>\n                    <Route path='/racing'>\n                        <RacingChartHome />\n                    </Route>                     \n                    <Route path='/detail/:state'>\n                        <Detail />\n                    </Route>\n                </>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter","  import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport AppRouter from './Router';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );    \n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history} >\n      <App />\n    </Router>,\n    document.getElementById('root')\n);"],"sourceRoot":""}
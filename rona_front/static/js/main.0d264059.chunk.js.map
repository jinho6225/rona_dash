{"version":3,"sources":["components/useResizeObserver.js","components/RacingBarChart.js","components/useInterval.js","routes/RacingChartHome.js","components/BarChart.js","components/PieChart.js","routes/Home.js","components/Navigation.js","components/DetailBarChart.js","routes/Detail.js","Router.js","App.js","index.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","RacingBarChart","data","maxTotal","unit","svgRef","useRef","wrapperRef","svg","select","sort","a","b","value","yScale","scaleBand","paddingInner","domain","map","index","range","height","xScale","scaleLinear","width","selectAll","name","join","enter","append","attr","color","Math","floor","bandwidth","transition","text","className","style","marginBottom","useInterval","callback","delay","savedCallback","id","setInterval","clearInterval","helper","arr","array","i","length","randomColor","random","toString","push","RacingChartHome","iteration","setIteration","start","setStart","confirmedData","setConfirmedData","deathData","setDeathData","isFirstRender","dataArr","setDataArr","deathdataArr","setDeathDataArr","period","setPeriod","setMaxTotal","maxDeathTotal","setMaxDeathTotal","province","setProvince","fetch","then","res","json","console","log","list_of_daily_confirmed_record_by_state","list_of_daily_death_record_by_state","date_array","max_total_confirmed_count_list","max_total_death_count_list","province_list","copied","JSON","parse","stringify","deathCopied","nameA","toUpperCase","nameB","margin","onClick","Barchart","history","useHistory","padding","maxNum","max","colorScale","clamp","xx","xAxis","axisBottom","ticks","tickFormat","d","call","yAxis","axisLeft","on","event","nodes","indexOf","this","toLocaleString","remove","e","handleClick","val","marginLeft","PieChart","colors","totalSum","reduce","acc","cur","arcGenerator","arc","innerRadius","outerRadius","instructions","pie","padAngle","pieGenerator","num","toFixed","centroid","Home","world","setWorld","confirmed","setConfirmed","deaths","setDeaths","setDate","today","Date","month","getMonth","date","getDate","year","getFullYear","Today","world_df","count","confirmed_global_us","deaths_global_us","state_df","Confirmed","Province_State","BarChart","key","htmlFor","Navigation","to","DetailBarChart","opt","tickValues","title","Detail","state","useParams","AppRouter","exact","path","App","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d264059.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;","import { select, scaleBand, scaleLinear } from \"d3\";\nimport React, { useEffect, useRef } from \"react\";\nimport useResizeObserver from \"./useResizeObserver\";\n\nfunction RacingBarChart({ data, maxTotal, unit }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    // sorting the data\n    data.sort((a, b) => b.value - a.value);\n\n    const yScale = scaleBand()\n        .paddingInner(0.1)\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.height]);\n\n    const xScale = scaleLinear()\n        .domain([0, maxTotal+50000])\n        .range([0, dimensions.width]);\n\n    //draw the bars\n    svg.selectAll(\".bar\")\n    .data(data, (entry, index) => entry.name)\n    .join(enter => enter.append('rect').attr('y', (entry, index) => yScale(index)))\n    .attr('fill', entry => entry.color)\n    .attr(\"class\", \"bar\")\n    .attr('x', 0)\n    .attr('height', Math.floor(yScale.bandwidth()) - 1)\n    .transition()\n    .attr('width', entry => xScale(entry.value))\n    .attr(\"y\", (entry, index) => yScale(index));\n\n    //draw the labels\n    svg.selectAll('.label')\n    .data(data, (entry, index) => entry.name)\n    .join(enter => enter.append('text').attr('y', (entry, index) => yScale(index) +  yScale.bandwidth() / 2 + 5))\n    .text(entry => `${entry.name} (${entry.value} ${unit})`)\n    .attr('class', 'label')\n    .attr('x', entry => xScale(entry.value) + 10)\n    .transition()\n    .attr(\"y\", (entry, index) => yScale(index) + yScale.bandwidth() / 2 + 5);\n\n  }, [data, dimensions]);\n\n    return (\n    <div className=\"svgContainer\" ref={wrapperRef} style={{ marginBottom: \"0.3rem\" }}>\n        <svg ref={svgRef} className=\"racing_svg\">\n            {/* <g className=\"x-axis\" /> */}\n            {/* <g className=\"y-axis\" /> */}\n\n        </svg>\n    </div>\n    );\n}\n\nexport default RacingBarChart;","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;","import React, { useEffect, useState, useRef } from \"react\";\nimport RacingBarChart from \"../components/RacingBarChart\";\nimport useInterval from \"../components/useInterval\";\n\nconst helper = (arr) => {\n  let array = [];\n  for (let i = 0; i < arr.length; i++) {\n    let randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    array.push({\n      name: arr[i],\n      value: 0,\n      color: \"#\" + randomColor,\n    });\n  }\n  return array;\n};\n\nfunction RacingChartHome() {\n  const [iteration, setIteration] = useState(0);\n  const [start, setStart] = useState(false);\n  const [confirmedData, setConfirmedData] = useState([]);\n  const [deathData, setDeathData] = useState([]);\n  const isFirstRender = useRef(true);\n  const [dataArr, setDataArr] = useState([]);\n  const [deathdataArr, setDeathDataArr] = useState([]);\n  const [period, setPeriod] = useState([]);\n  const [maxTotal, setMaxTotal] = useState(0);\n  const [maxDeathTotal, setMaxDeathTotal] = useState(0);\n\n  const [province, setProvince] = useState([]);\n\n  useEffect(() => {\n    // fetch(`http://127.0.0.1:8000/api/dynamic`)\n    fetch(`https://myungjinho85.pythonanywhere.com/api/dynamic`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setDataArr(data.list_of_daily_confirmed_record_by_state);\n        setDeathDataArr(data.list_of_daily_death_record_by_state);\n        setPeriod(data.date_array);\n        setMaxTotal(data.max_total_confirmed_count_list);\n        setMaxDeathTotal(data.max_total_death_count_list);\n        setProvince(data.province_list);\n        isFirstRender.current = false;\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!isFirstRender.current) {\n      setConfirmedData(helper(province));\n      setDeathData(helper(province))\n    }\n  }, [province]);\n\n  useInterval(() => {\n    if (start) {\n      let copied = JSON.parse(JSON.stringify(confirmedData));\n      let deathCopied = JSON.parse(JSON.stringify(deathData));\n      copied.sort(function (a, b) {\n        var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      deathCopied.sort(function (a, b) {\n        var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      if (iteration < dataArr.length) {\n        for (let i = 0; i < dataArr[iteration].length; i++) {\n          copied[i].value = dataArr[iteration][i];\n        }\n        setConfirmedData(copied);\n      }\n      if (iteration < deathdataArr.length) {\n        for (let i = 0; i < deathdataArr[iteration].length; i++) {\n            deathCopied[i].value = deathdataArr[iteration][i];\n        }\n        setDeathData(deathCopied);\n      }\n      setIteration(iteration + 1);\n      if (iteration === dataArr.length) {\n        setStart(!start);\n      }\n    }\n  }, 200);\n  \n  return (\n    <div className=\"container\">\n      <div className=\"racing_chart_container\">\n        <div className=\"racingChart\">\n          <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n            Total Confirmed by U.S. State\n            <span className=\"date\"> (Date: {period[iteration] ? period[iteration] : period[period.length-1]})</span>\n          </h4>\n          <RacingBarChart data={confirmedData} maxTotal={maxTotal} unit={'confiremd'} />\n        </div>\n        <div className=\"racingChart\">\n          <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n            Total Deaths by U.S. State\n            <span className=\"date\"> (Date: {period[iteration] ? period[iteration] : period[period.length-1]})</span>\n          </h4>\n          <RacingBarChart data={deathData} maxTotal={maxDeathTotal} unit={'deaths'} />\n        </div>\n      </div>\n      <div className=\"btn-container\">\n        <button onClick={() => setStart(!start)}>\n            {start ? \"Stop the race\" : \"Start the race!\"}\n        </button>\n        <button onClick={() => {\n            setIteration(0)\n            setStart(!start)\n        }}>\n            Restart\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default RacingChartHome;\n","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom, scaleLinear, axisLeft, scaleBand, max } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Barchart({ data, province=false }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef)\n  const history = useHistory();\n\n    function handleClick(d, index) {\n        if (province) {\n            history.push(`/detail/${d[index]}`);\n        }\n    }  \n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(dimensions)\n\n    if (!dimensions) return;\n\n    //scale\n    let padding = province && province.length ? 0.4: 0.5\n    const xScale = scaleBand()\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.width]) // change\n        .padding(padding);\n\n    let maxNum = province && province.length ? max(data)+50000 : max(data)+5000000\n    const yScale = scaleLinear()\n        .domain([0, maxNum]) //todo\n        .range([dimensions.height, 0]); // change\n\n    let color = province && province.length ? [\"green\", \"orange\", \"red\"] : [\"red\", \"green\", \"orange\"]\n    const colorScale = scaleLinear()\n        .domain([0, maxNum/2, maxNum])\n        .range(color)\n        .clamp(true);\n\n    //create x-axis\n    let xx = province && province.length ? [\"Alabama\", \"Alaska\", \"American Samoa\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Diamond Princess\", \"District of Columbia\", \"Florida\", \"Georgia\", \"Grand Princess\", \"Guam\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Northern Mariana Islands\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Puerto Rico\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virgin Islands\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"] : ['confirmed', \"Deaths\", \"Recovered\"]\n    const xAxis = axisBottom(xScale)\n        .ticks(data.length)\n        // .attr(\"transform\",  `translate(10px, 10px) rotate(45deg)`)\n        .tickFormat((d, i) => xx[i])\n\n        if (province && province.length) {\n            svg\n            .select(\".x-axis\")\n            .style(\"transform\", `translateY(${dimensions.height}px) `)\n            .call(xAxis)\n            .selectAll(\"text\")\n            .attr(\"y\", 6)\n            .attr(\"x\", -6)\n            .attr(\"dy\", \".5em\")\n            .attr(\"transform\", \"rotate(-40)\")\n            .style(\"text-anchor\", \"end\");\n        } else if (province === false){\n            svg\n            .select(\".x-axis\")\n            .style(\"transform\", `translateY(${dimensions.height}px) `)\n            .call(xAxis)\n        }\n\n\n    //create y-axis\n    const yAxis = axisLeft(yScale);\n    svg\n        .select(\".y-axis\")\n        .style(\"transform\", `0`)\n        .call(yAxis);\n\n    if (province && province.length) {\n        svg\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .on(\"mouseenter\", function(event, value) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            select(this)\n            .attr(\"opacity\", 0.3)\n            .transition()\n\n            svg\n                .selectAll(\".tooltip\")\n                .data([value])\n                .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value) - 4))\n                .attr(\"class\", \"tooltip\")\n                .text(d => d.toLocaleString())\n                .attr(\"x\", xScale(index) + xScale.bandwidth() / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .transition()\n                .attr(\"y\", yScale(value) - 8)\n                .attr(\"opacity\", 1);\n        })\n        .on(\"mouseleave\", function(event, value) {\n            select(this)\n            .attr(\"opacity\", 1)\n            .transition()\n\n            svg.selectAll(\".tooltip\").remove()\n        })\n        .style(\"transform\", 'scale(1, -1)')\n        .attr('x', (value, index) => xScale(index))\n        .attr('y', -dimensions.height)\n        .attr('width', xScale.bandwidth())\n        .on(\"click\", function(e, d) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            handleClick(province, index);\n        })            \n        .transition()\n        .attr('fill', colorScale)\n        .attr('height', val => dimensions.height - yScale(val))\n\n    } else if (province === false){\n        svg\n            .selectAll(\".bar\")\n            .data(data)\n            .join(\"rect\")\n            .attr(\"class\", \"bar\")\n            .style(\"transform\", 'scale(1, -1)')\n            .attr('x', (value, index) => xScale(index))\n            .attr('y', -dimensions.height)\n            .attr('width', xScale.bandwidth())\n            .transition()\n            .attr('fill', colorScale)\n            .attr('height', val => dimensions.height - yScale(val))\n    \n        svg\n            .selectAll(\".content\")\n            .data(data)\n            .join(enter => enter.append('text').attr('y', d => yScale(d) - 4))\n            .attr('class', 'content')\n            .text(d => d.toLocaleString())\n            .attr('x', (d, i) => xScale(i) + xScale.bandwidth() / 2)\n            .attr('text-anchor', 'middle')\n            .transition()\n            .attr('y', d => yScale(d) - 8)\n            .attr(\"opacity\", 1);\n    }\n\n    \n\n\n  }, [data, dimensions, province]);\n\n  return (\n    <div ref={wrapperRef} style={{marginBottom: \"1.5rem\", marginLeft: \"4rem\"}}>\n        <svg ref={svgRef} className=\"main_svg\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n        </svg> \n    </div>\n  );\n}\n\nexport default Barchart","import { arc, pie, select } from \"d3\";\nimport React, { useEffect, useRef } from \"react\";\nimport useResizeObserver from \"./useResizeObserver\";\n\n\nfunction PieChart({ data, colors }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    const reducer = (acc, cur) => acc + cur.value;\n    const totalSum = data.reduce(reducer, 0)\n    // arc takes instructions (objects with special properties, like startAngle, endAngle, etc.)\n    // and transforms them into \"d\" attributes for path elements\n    const arcGenerator = arc()\n    .innerRadius(10)\n    .outerRadius(150);\n\n    // pie will transform data to instructions for arcGenerator\n    const pieGenerator = pie()\n    .padAngle(0)\n    .value(d => d.value)\n    // .sort(null); // makes sure data doesn't get sorted\n    // now transform data to instructions for arc() \n    const instructions = pieGenerator(data)\n\n\n    svg\n        .selectAll(\".slice\")\n        .data(instructions)\n        .join(\"path\")\n        .attr(\"class\", 'slice')\n        .attr(\"stroke\", 'white')\n        .attr(\"fill\", (d, i) => colors[d.data.name])\n        .style('transform', `translate(${dimensions.width / 2}px, ${dimensions.height / 2}px)`)\n        .attr('d', arcGenerator)\n        .transition()\n\n\n        // .attr(\"stroke\", 'white')\n        // .attr(\"stroke-width\", '2px')\n        // .attr(\"fill\", (d, i) => colors[d.data.name])\n        // .style('transform', `translate(${dimensions.width / 2}px, ${dimensions.height / 2}px)`)\n        // .attr('d', arcGenerator)\n        // .transition()\n\n    svg\n        .selectAll(\".labels\")\n        .data(instructions)\n        .join(\"text\")\n        .attr(\"class\", \"labels\")\n        .text((d, i) => {\n          let num = d.data.value ? d.data.value : 0\n          let percentage = (num * 100) / totalSum\n          return num ? (percentage).toFixed(2) + '%' : null\n        })\n        .attr('fill','white')\n        .attr('x', (d, i) => {\n          return arcGenerator.centroid(d)[0] + (dimensions.width/2)-25\n        })\n        .attr('y', (d, i) => {\n          return arcGenerator.centroid(d)[1] + (dimensions.height/2)\n        })\n        .transition()\n\n\n  }, [data, dimensions]);\n\n  return (\n    <div className=\"svgContainer\" ref={wrapperRef} style={{ padding: '0' }}>\n        <svg ref={svgRef} className=\"main_svg\">\n\n        </svg>\n    </div>\n  );\n}\n\nexport default PieChart;","import React, { useState, useEffect, useRef } from \"react\";\nimport BarChart from \"../components/BarChart\";\nimport PieChart from \"../components/PieChart\";\n\nfunction Today() {\n  let today = new Date();\n  let month = today.getMonth() + 1;\n  let date = today.getDate();\n  let year = today.getFullYear();\n  return `${month}/${date}/${year}`;\n}\n\nconst colors = {\n  \"Global\": '#ffddc1',\n  \"US\": '#ffab91',\n};\n\nfunction Home() {\n  const [world, setWorld] = useState([]);\n  const [confirmed, setConfirmed] = useState([]);\n  const [deaths, setDeaths] = useState([]);\n  const [data, setDate] = useState([]);\n  const [province, setProvince] = useState([]);\n\n\n  const today = useRef(Today());\n  useEffect(() => {\n    // fetch(`http://127.0.0.1:8000/api/overview`)\n    fetch(`https://myungjinho85.pythonanywhere.com/api/overview`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setWorld(data.world_df.count);\n        setConfirmed(data.confirmed_global_us)\n        setDeaths(data.deaths_global_us)\n        setDate(data.state_df.Confirmed)\n        setProvince(data.state_df.Province_State)\n      });\n  }, []);\n\n  return (\n    <div className=\"main_chart_container\">\n      <div className=\"barChart1\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Global Total Case\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <BarChart data={world} />\n      </div>\n      <div className=\"pieChart1\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Confirmed (Global / US)\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <PieChart\n          data={confirmed}\n          colors={colors}\n        />\n        <div className=\"fields\" >\n            {confirmed.map(key => (\n              <div key={key.name}>\n                <div key={key.name} className=\"field\">\n                  <label htmlFor={key.name} style={{ color: colors[key.name] }}>\n                      {key.name}\n                  </label>\n                </div>\n                <div key={key.value} className=\"field\">\n                  <label htmlFor={key.value} style={{ color: colors[key.name] }}>\n                      {key.value.toLocaleString()}\n                  </label>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n      <div className=\"pieChart2\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Deaths (Global / US)\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <PieChart\n          data={deaths}\n          colors={colors}\n        />\n        <div className=\"fields\" >\n            {deaths.map(key => (\n              <div key={key.name}>\n                <div key={key.name} className=\"field\">\n                  <label htmlFor={key.name} style={{ color: colors[key.name] }}>\n                      {key.name}\n                  </label>\n                </div>\n                <div key={key.value} className=\"field\">\n                  <label htmlFor={key.value} style={{ color: colors[key.name] }}>\n                      {key.value.toLocaleString()}\n                  </label>\n                </div>\n              </div>                 \n            ))}\n        </div>        \n      </div>\n      <div className=\"barChart2\">\n        <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n          Total of Confirmed Case By US State\n          <span className=\"date\"> (Date: {today.current})</span>\n        </h4>\n        <BarChart data={data} province={province}  />\n      </div>\n    </div>\n  );\n}\nexport default Home;\n","import React from 'react';\nimport { Link } from \"react-router-dom\"\n\n\nfunction Navigation() {\n    return (\n            <div className=\"nav\" id=\"navbarNav\">\n                <h3 className=\"title\" style={{ margin: \"0.2rem\" }}>\n                <Link to='/'>COVID Tracker</Link></h3>\n                <ul className=\"navbar-nav\">\n                    <li className=\"navbar-nav-li\">\n                        <Link to='/'>Home</Link>\n                    </li>\n                    <li className=\"navbar-nav-li\">\n                        <Link to='/racing'>Racing Bar Chart</Link>\n                    </li>\n                </ul>\n            </div>\n    )\n}\n\nexport default Navigation;","import React, { useRef, useEffect } from \"react\";\nimport { select, axisBottom, scaleLinear, axisLeft, scaleBand, max } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction DetailBarChart({ data, period, opt=false }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef)\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(dimensions)\n\n    if (!dimensions) return;\n\n    //scale\n    const xScale = scaleBand()\n        .domain(data.map((value, index) => index))\n        .range([0, dimensions.width]) // change\n        .padding(0.1);\n\n    let maxNum = opt ? max(data)+2000 : max(data)+50000\n    const yScale = scaleLinear()\n        .domain([0, maxNum]) //todo\n        .range([dimensions.height, 0]); // change\n\n    const colorScale = scaleLinear()\n        .domain([0, (maxNum)/2, maxNum])\n        .range([\"green\", \"orange\", \"red\"])\n        .clamp(true);\n\n    //create x-axis\n    \n    const xAxis = axisBottom(xScale)\n    .tickValues([]);\n\n    svg\n    .select(\".x-axis\")\n    .style(\"transform\", `translateY(${dimensions.height}px) `)\n    .call(xAxis)\n        \n\n    let title = opt ? 'Deaths' : 'Confirmed'\n    //create y-axis\n    const yAxis = axisLeft(yScale);\n    svg\n        .select(\".y-axis\")\n        .style(\"transform\", `0`)\n        .call(yAxis);\n\n        svg\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .on(\"mouseenter\", function(event, value) {\n            const index = svg.selectAll(\".bar\").nodes().indexOf(this);\n            select(this)\n            .attr(\"opacity\", 0.2)\n            .transition()\n\n            svg\n                .selectAll(\".tooltip\")\n                .data([value])\n                .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value) - 4))\n                .attr(\"class\", \"tooltip\")\n                .text(d => `${period[index]}: ${d.toLocaleString()} ${title}`)\n                // .text(d => `${d.toLocaleString()} ${title}`)\n                .attr(\"x\", xScale(index) + xScale.bandwidth() / 2 - 80)\n                .attr(\"text-anchor\", \"middle\")\n                .transition()\n                .attr(\"y\", yScale(value) - 8)\n                .attr(\"opacity\", 1);\n        })\n        .on(\"mouseleave\", function(event, value) {\n            select(this)\n            .attr(\"opacity\", 1)\n            .transition()\n            svg.selectAll(\".tooltip\").remove()\n        })\n        .style(\"transform\", 'scale(1, -1)')\n        .attr('x', (value, index) => xScale(index))\n        .attr('y', -dimensions.height)\n        .attr('width', xScale.bandwidth())          \n        .transition()\n        .attr('fill', colorScale)\n        .attr('height', val => dimensions.height - yScale(val))\n\n    svg\n        .selectAll('.y-axis-label')\n        .data([title])\n        .join(\n            enter => enter.append(\"text\").attr('class', 'y-axis-label')\n        )\n        .attr(\"fill\", \"Navy\")//set the fill here\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -55)\n        .attr(\"x\", 0 - (dimensions.height / 2) - 48)\n        .text(d => d)\n\n\n  }, [data, dimensions]);\n\n  return (\n    <div ref={wrapperRef} style={{marginBottom: \"1.5rem\", marginLeft: \"4rem\"}}>\n        <svg ref={svgRef} className=\"detail_svg\">\n            <g className=\"x-axis\" />\n            <g className=\"y-axis\" />\n        </svg> \n    </div>\n  );\n}\n\nexport default DetailBarChart","import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DetailBarChart from \"../components/DetailBarChart\";\n\nfunction Today() {\n    let today = new Date();\n    let month = today.getMonth() + 1;\n    let date = today.getDate();\n    let year = today.getFullYear();\n    return `${month}/${date}/${year}`;\n  }\n\nfunction Detail() {\n    const [period, setPeriod] = useState([]);\n    const [confirmed, setConfirmed] = useState([]);\n    const [deaths, setDeaths] = useState([]);\n    const today = useRef(Today());\n\n\n    let { state } = useParams();\n    useEffect(() => {\n        // fetch(`http://127.0.0.1:8000/api/detail/${state}`)\n        fetch(`https://myungjinho85.pythonanywhere.com/api/detail/${state}`)\n\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data, 'data')\n            setPeriod(data.period)\n            setConfirmed(data.confirmed)\n            setDeaths(data.deaths)\n        })\n    }, [])\n\n    return (\n        <div className=\"detail_chart_container\">\n            <div className=\"detailBarChart\">\n                <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n                {state} Confirmed Total\n                <span className=\"date\"> (as of {today.current})</span>\n                </h4>\n                {confirmed.length ? <DetailBarChart data={confirmed} period={period}/> : null}\n            </div>\n            <div className=\"detailBarChart\">\n                <h4 className=\"title\" style={{ margin: \"0.3rem\" }}>\n                {state} Deaths Total\n                <span className=\"date\"> (as of {today.current})</span>\n                </h4>\n                {deaths.length ? <DetailBarChart data={deaths} opt={true} period={period}/> : null}\n            </div>\n        </div>\n    );\n}\nexport default Detail;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport RacingChartHome from './routes/RacingChartHome';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\n\nconst AppRouter = () => {\n    \n    return (\n        <Router>\n            <Navigation />\n            <Switch>\n                <>\n                    <Route exact path='/'>\n                        <Home />\n                    </Route>\n                    <Route path='/racing'>\n                        <RacingChartHome />\n                    </Route>                     \n                    <Route path='/detail/:state'>\n                        <Detail />\n                    </Route>\n                </>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter","  import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport AppRouter from './Router';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );    \n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history} >\n      <App />\n    </Router>,\n    document.getElementById('root')\n);"],"sourceRoot":""}